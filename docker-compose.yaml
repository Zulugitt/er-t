version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  pgdata: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
#    ports:
#      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
#    ports:
#      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    user: root
    depends_on:
      - prometheus
    volumes:
      - ./grafana/:/var/lib/grafana/
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./main-dashboard.json:/var/lib/grafana/dashboards/main-dashboard.json
      - ./automatic.yaml:/etc/grafana/provisioning/datasources/automatic.yaml
    environment:
#      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ORG_ROLE=viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_SERVER_ROOT_URL=http://localhost/grafana/
    restart: unless-stopped
    expose:
      - 3000
#    ports: 
#      - 3000:3000
    networks:
      - monitoring


#########
  jbpm:
    image: jboss/jbpm-server-full
    container_name: jbpmn
    hostname: jbpmn
    expose:
      - 8080
#    ports:
#      - 8084:8080
    environment:
      - JBPM_DB_DRIVER=postgres
      - POSTGRES_HOST=postgres
      - JBPM_DB_USER=postgress
      - JBPM_DB_PASSWORD=pass222
    depends_on:
      - postgres
      - grafana
    networks:
      - monitoring

  nginx:
    image: nginx:latest
    ports: 
     - 80:80
    volumes:
      - ./et.conf:/etc/nginx/conf.d/et.conf
    restart: always
    environment:
      - NGINX_PORT=80
    hostname: nginx
    depends_on:
    - jbpm
    - grafana
    networks:
      - monitoring

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass222
#      - PGDATA="/var/lib/postgresql/data/pgdata"
      - PGDATA=pgdata
#    ports:
#      - 5432:5432
#    volumes:
#      - ./postgresql/data:/var/lib/postgresql/data/pgdata
    networks:
      - monitoring


